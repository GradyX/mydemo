如果没有指挥者类Director，客户端将如何构建复杂产品？
将Director中的custruct方法中创建复杂产品的流程移至Builder对象中的getResult方法。
对Director类的省略方式都不影响系统的灵活性和可扩展性，同时还简化了系统结
构，但加重了抽象建造者类的职责，如果construct()方法较为复杂，待构建产品的组成部分较
多，建议还是将construct()方法单独封装在Director中，这样做更符合“单一职责原则”。

钩子方法的引入
钩子方法的返回类型通常为boolean类型，方法名一般为isXXX()，钩子方法定义在抽象建造者
类中，来控制是否对某个buildPartX()的调用

建造者模式的核心在于如何一步步构建一个包含多个组成部件的完整对象，使用相同的构建
过程构建不同的产品，并创建过程独立于创建该对象的类

Sunny软件公司欲开发一个视频播放软件，为了给用户使用提供方便，该播放软件提供多
种界面显示模式，如完整模式、精简模式、记忆模式、网络模式等。在不同的显示模式
下主界面的组成元素有所差异，如在完整模式下将显示菜单、播放列表、主窗口、控制
条等，在精简模式下只显示主窗口和控制条，而在记忆模式下将显示主窗口、控制条、
收藏列表等。尝试使用建造者模式设计该软件。